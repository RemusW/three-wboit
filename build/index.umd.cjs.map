{"version":3,"file":"index.umd.cjs","sources":["../src/materials/MeshWboitMaterial.js","../src/shaders/WboitCompositeShader.js","../src/shaders/WboitTestShader.js","../src/WboitPass.js"],"sourcesContent":["/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description MeshWboitMaterial\n// @about       Reimplementation of MeshBasicMaterial for use with transparent Meshes rendered with WboitPass\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/stevinz/three-wboit\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport { UniformsUtils, UniformsLib, ShaderMaterial, MultiplyOperation } from 'three';\n\nconst WboitStages = {\n    Normal: 0.0,\n    Acummulation: 1.0,\n    Revealage: 2.0,\n}\n\nconst WboitBasicShader = {\n\n    // based on MeshBasicMaterial\n    // https://github.com/mrdoob/three.js/blob/dev/src/materials/MeshBasicMaterial.js\n    // https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib.js\n    // https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib/meshbasic.glsl.js\n\n\tuniforms: UniformsUtils.merge( [\n        {\n            renderStage: { value: 0.0 },\n            weight: { value: 1.0 },\n        },\n\t\tUniformsLib.common,\n\t\tUniformsLib.specularmap,\n\t\tUniformsLib.envmap,\n\t\tUniformsLib.aomap,\n\t\tUniformsLib.lightmap,\n\t\tUniformsLib.fog\n\t] ),\n\n\tvertexShader: /* glsl */`\n\n        precision highp float;\n        precision highp int;\n\n        #include <common>\n        #include <uv_pars_vertex>\n        #include <uv2_pars_vertex>\n        #include <envmap_pars_vertex>\n        #include <color_pars_vertex>\n        #include <fog_pars_vertex>\n        #include <morphtarget_pars_vertex>\n        #include <skinning_pars_vertex>\n        #include <logdepthbuf_pars_vertex>\n        #include <clipping_planes_pars_vertex>\n\n        void main() {\n\n            #include <uv_vertex>\n            #include <uv2_vertex>\n            #include <color_vertex>\n            #include <morphcolor_vertex>\n\n            #if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\n                #include <beginnormal_vertex>\n                #include <morphnormal_vertex>\n                #include <skinbase_vertex>\n                #include <skinnormal_vertex>\n                #include <defaultnormal_vertex>\n\n            #endif\n\n            #include <begin_vertex>\n            #include <morphtarget_vertex>\n            #include <skinning_vertex>\n            #include <project_vertex>\n            #include <logdepthbuf_vertex>\n            #include <clipping_planes_vertex>\n\n            #include <worldpos_vertex>\n            #include <envmap_vertex>\n            #include <fog_vertex>\n\n        }\n\n    `,\n\n\tfragmentShader: /* glsl */`\n\n        precision highp float;\n        precision highp int;\n\n        // MeshWboitMaterial\n\n        uniform float renderStage;\n        uniform float weight;\n\n        // MeshBasicMaterial\n\n        uniform vec3 diffuse;\n        uniform float opacity;\n\n        #ifndef FLAT_SHADED\n\n            varying vec3 vNormal;\n\n        #endif\n\n        #include <common>\n        #include <dithering_pars_fragment>\n        #include <color_pars_fragment>\n        #include <uv_pars_fragment>\n        #include <uv2_pars_fragment>\n        #include <map_pars_fragment>\n        #include <alphamap_pars_fragment>\n        #include <alphatest_pars_fragment>\n        #include <aomap_pars_fragment>\n        #include <lightmap_pars_fragment>\n        #include <envmap_common_pars_fragment>\n        #include <envmap_pars_fragment>\n        #include <fog_pars_fragment>\n        #include <specularmap_pars_fragment>\n        #include <logdepthbuf_pars_fragment>\n        #include <clipping_planes_pars_fragment>\n\n        void main() {\n\n            #include <clipping_planes_fragment>\n\n            vec4 diffuseColor = vec4( diffuse, opacity );\n\n            #include <logdepthbuf_fragment>\n            #include <map_fragment>\n            #include <color_fragment>\n            #include <alphamap_fragment>\n            #include <alphatest_fragment>\n            #include <specularmap_fragment>\n\n            ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n            // accumulation (baked indirect lighting only)\n\n            #ifdef USE_LIGHTMAP\n\n                vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n                reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\n            #else\n\n                reflectedLight.indirectDiffuse += vec3( 1.0 );\n\n            #endif\n\n            // modulation\n\n            #include <aomap_fragment>\n\n            reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n            vec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n            #include <envmap_fragment>\n            #include <output_fragment>\n            #include <tonemapping_fragment>\n            #include <encodings_fragment>\n            #include <fog_fragment>\n            #include <premultiplied_alpha_fragment>\n            #include <dithering_fragment>\n\n            // wboit\n\n            if ( renderStage == ${ WboitStages.Acummulation.toFixed( 1 ) } ) {\n\n                vec4 accum = gl_FragColor.rgba;\n                float z = gl_FragCoord.z;\n\n                // // McGuire 10/2013\n                // float w = clamp( pow( ( accum.a * 8.0 + 0.01 ) * ( - z * 0.95 + 1.0 ), 3.0 ) * 1e3, 1e-2, 3e2 );\n                // gl_FragColor = vec4( accum.rgb, accum.a ) * w;\n\n                // // Equation #9\n                // float w = accum.a * clamp( 0.03 / ( 1e-5 + pow( abs( z ) / 200.0, 4.0 ) ), 0.01, 300.0 );\n                // gl_FragColor = vec4( accum.rgb * accum.a, accum.a ) * w;\n\n                // // Stevinz 10/2022\n                float scaleWeight = 0.7 + ( 0.3 * weight );\n                float w = clamp( pow( ( accum.a * 8.0 + 0.001 ) * ( - z * scaleWeight + 1.0 ), 3.0 ) * 1000.0, 0.001, 300.0 );\n                gl_FragColor = vec4( accum.rgb * accum.a, accum.a ) * w;\n\n            } else if ( renderStage == ${ WboitStages.Revealage.toFixed( 1 ) } ) {\n\n                gl_FragColor = vec4( gl_FragColor.a * gl_FragCoord.z );\n\n            }\n\n        }\n\n    `,\n\n};\n\n//\n\nclass MeshWboitMaterial extends ShaderMaterial {\n\n\tconstructor( parameters = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshWboitMaterial = true;\n\n\t\tthis.type = 'MeshWboitMaterial';\n\n\t\tconst shader = WboitBasicShader;\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\t\tthis.vertexShader = shader.vertexShader;\n        this.fragmentShader = shader.fragmentShader;\n\n        // properties (no uniforms)\n\n\t\tthis.combine = MultiplyOperation;\n\n        this.transparent = true;\n\n        this.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n        // properties (associated w/ uniforms)\n\n\t\tconst exposePropertyNames = [\n\n            // Material\n\n            'opacity',\n\n            // MeshBasicMaterial\n\n            'diffuse',\n            'map',\n            'lightMap',\n            'lightMapIntensity',\n            'aoMap',\n            'aoMapIntensity',\n            'specularMap',\n            'alphaMap',\n            'alphaTest',\n\t\t\t'envMap',\n            'reflectivity',\n            'refractionRatio',\n\n            // MeshWboitMaterial,\n\n            'weight',\n\n\t\t];\n\n\t\tfor ( const propertyName of exposePropertyNames ) {\n\n\t\t\tObject.defineProperty( this, propertyName, {\n\n\t\t\t\tget: function () { return this.uniforms[ propertyName ].value; },\n\n\t\t\t\tset: function ( value ) { this.uniforms[ propertyName ].value = value; }\n\n\t\t\t} );\n\n\t\t}\n\n        Object.defineProperty( this, 'color', Object.getOwnPropertyDescriptor( this, 'diffuse' ) );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n    copy( source ) {\n\n\t\tsuper.copy( source );\n\n        // MeshBasicMaterial\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n        // MeshWboitMaterial\n\n        this.weight = source.weight;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { MeshWboitMaterial, WboitStages };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description WboitCompositeShader\n// @about       Full-screen composite shader for WBOIT for use with WboitPass\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/stevinz/three-wboit\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nconst WboitCompositeShader = {\n\n\tuniforms: {\n\n        'tAccumulation': { value: null },\n        'tRevealage': { value: null },\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n        precision highp float;\n        precision highp int;\n\n        varying vec2 vUv;\n\n        void main() {\n\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n        }\n\n    `,\n\n\tfragmentShader: /* glsl */`\n\n        precision highp float;\n        precision highp int;\n\n        varying vec2 vUv;\n\n        uniform sampler2D tAccumulation;\n        uniform sampler2D tRevealage;\n\n        float EPSILON = 0.00001;\n\n        bool fuzzyEqual( float a, float b ) {\n            return abs( a - b ) <= ( abs( a ) < abs( b ) ? abs( b ) : abs( a ) ) * EPSILON;\n        }\n\n        void main() {\n\n            float reveal = texture2D( tRevealage, vUv ).r;\n            if ( fuzzyEqual( reveal, 1.0 ) ) discard;\n\n            vec4 accum = texture2D( tAccumulation, vUv );\n\n            vec4 composite = vec4( accum.rgb / clamp( accum.a, 0.0001, 50000.0 ), reveal );\n            gl_FragColor = clamp( composite, 0.01, 300.0 );\n\n        }\n\n    `,\n\n};\n\nexport { WboitCompositeShader };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description WboitCompositeShader\n// @about       Full-screen composite shader for WBOIT for use with WboitPass\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/stevinz/three-wboit\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nconst WboitTestShader = {\n\n\tuniforms: {},\n\n\tvertexShader: /* glsl */`\n\n        varying vec2 vUv;\n\n        void main() {\n\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n        }\n\n    `,\n\n\tfragmentShader: /* glsl */`\n\n        varying vec2 vUv;\n\n        void main() {\n\n            gl_FragColor = vec4( 1.0, 1.0, 1.0, 1.0 );\n\n        }\n\n    `,\n\n};\n\nexport { WboitTestShader };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description WboitRenderer\n// @about       Weighted, blended order-independent transparency renderer for use with three.js WebGLRenderer\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/stevinz/three-wboit\n//\n//      See end of file for license details and acknowledgements\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Types of Order Independent Transparency\n//      Depth Peeling, 2001 (many passes)\n//      Dual Depth Peeling, 2008 (many passes)\n//      Weighted, Blended, 2013 (fastest, approximate, mobile friendly)\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { Pass } from 'three/addons/postprocessing/Pass.js';\nimport { ShaderPass } from 'three/addons/postprocessing/ShaderPass.js';\n\nimport { CopyShader } from 'three/addons/shaders/CopyShader.js';\nimport { WboitCompositeShader } from './shaders/WboitCompositeShader.js';\nimport { WboitTestShader } from './shaders/WboitTestShader.js';\nimport { WboitStages } from './materials/MeshWboitMaterial.js';\n\nconst _clearColorZero = new THREE.Color( 0.0, 0.0, 0.0 );\nconst _clearColorOne = new THREE.Color( 1.0, 1.0, 1.0 );\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Weighted, Blended Order-Independent Transparency\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass WboitPass extends Pass {\n\n    constructor ( renderer, scene, camera, clearColor, clearAlpha ) {\n\n        if ( ! renderer ) return console.error( `WboitPass.constructor: Renderer must be supplied!` );\n\n        super();\n\n        this.scene = scene;\n\t\tthis.camera = camera;\n\n        this.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\t\tthis.clear = false;\n\t\tthis.clearDepth = false;\n\t\tthis.needsSwap = false;\n\n        // Internal\n\n\t\tthis._oldClearColor = new THREE.Color();\n        this._depthTestCache = new Map();\n        this._depthWriteCache = new Map();\n        this._visibilityCache = new Map();\n\n        // Passes\n\n        this.blendPass = new ShaderPass( CopyShader );\n        this.blendPass.material.depthTest = false;\n        this.blendPass.material.depthWrite = false;\n        this.blendPass.material.blending = THREE.CustomBlending;\n        this.blendPass.material.blendEquation = THREE.AddEquation;\n        this.blendPass.material.blendSrc = THREE.SrcAlphaFactor;\n        this.blendPass.material.blendDst = THREE.OneMinusSrcAlphaFactor;\n\n        this.copyPass = new ShaderPass( CopyShader );\n        this.copyPass.material.depthTest = false;\n        this.copyPass.material.depthWrite = false;\n        this.copyPass.material.blending = THREE.CustomBlending;\n        this.copyPass.material.blendEquation = THREE.AddEquation;\n        this.copyPass.material.blendSrc = THREE.OneFactor;\n        this.copyPass.material.blendDst = THREE.ZeroFactor;\n\n        this.compositePass = new ShaderPass( WboitCompositeShader );\n        this.compositePass.material.transparent = true;\n        this.compositePass.material.blending = THREE.CustomBlending;\n        this.compositePass.material.blendEquation = THREE.AddEquation;\n        this.compositePass.material.blendSrc = THREE.OneMinusSrcAlphaFactor;\n        this.compositePass.material.blendDst = THREE.SrcAlphaFactor;\n\n        this.testPass = new ShaderPass( WboitTestShader );\n        this.testPass.material.blending = THREE.CustomBlending;\n        this.testPass.material.blendEquation = THREE.AddEquation;\n        this.testPass.material.blendSrc = THREE.OneFactor;\n        this.testPass.material.blendDst = THREE.ZeroFactor;\n\n        // Find Best Render Target Type\n\n        const size = renderer.getSize( new THREE.Vector2() );\n        const pixelRatio = renderer.getPixelRatio();\n        const effectiveWidth = size.width * pixelRatio;\n        const effectiveHeight = size.height * pixelRatio;\n\n        const gl = renderer.getContext();\n\n        const oldTarget = renderer.getRenderTarget();\n        const oldClearAlpha = renderer.getClearAlpha();\n        renderer.getClearColor( this._oldClearColor );\n\n        const targetTypes = [ THREE.FloatType, THREE.HalfFloatType, THREE.UnsignedIntType, THREE.UnsignedByteType ];\n        const targetGlTypes = [ gl.FLOAT, gl.HALF_FLOAT, gl.UNSIGNED_INT, gl.UNSIGNED_BYTE ];\n        const targetBuffers = [ new Float32Array( 4 ), new Float32Array( 4 ), new Uint32Array( 4 ), new Uint8Array( 4 ) ];\n        const targetDivisor = [ 1, 1, 255, 255 ];\n\n        let targetType;\n\n        for ( let i = 0; i < targetTypes.length; i ++ ) {\n\n            const testTarget = new THREE.WebGLRenderTarget( 8, 8, {\n                minFilter: THREE.NearestFilter,\n                magFilter: THREE.NearestFilter,\n                type: targetTypes[ i ],\n                format: THREE.RGBAFormat,\n                stencilBuffer: false,\n                depthBuffer: true,\n            } );\n\n            this.testPass.render( renderer, testTarget );\n\n            gl.readPixels( 0, 0, 1, 1, gl.RGBA, targetGlTypes[ i ], targetBuffers[ i ] );\n            const rgba = Array.apply( [], targetBuffers[ i ] );\n            rgba[ 0 ] /= targetDivisor[ i ];\n            rgba[ 1 ] /= targetDivisor[ i ];\n            rgba[ 2 ] /= targetDivisor[ i ];\n            rgba[ 3 ] /= targetDivisor[ i ];\n\n            if ( gl.checkFramebufferStatus( gl.FRAMEBUFFER ) === gl.FRAMEBUFFER_COMPLETE &&\n                rgba[ 0 ] === 1 && rgba[ 1 ] === 1 && rgba[ 2 ] === 1 && rgba[ 3 ] === 1 ) {\n                targetType = targetTypes[ i ];\n                testTarget.dispose();\n                break;\n            }\n\n            testTarget.dispose();\n\n        }\n\n        renderer.setRenderTarget( oldTarget );\n        renderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n        // Render Targets\n\n        this.baseTarget = new THREE.WebGLRenderTarget( effectiveWidth, effectiveHeight, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            type: targetType,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n            depthBuffer: true,\n        } );\n\n        this.accumulationTarget = new THREE.WebGLRenderTarget( effectiveWidth, effectiveHeight, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            type: targetType,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n            depthBuffer: false,\n        } );\n\n    }\n\n    dispose() {\n\n        this.blendPass.dispose();\n        this.copyPass.dispose();\n        this.compositePass.dispose();\n        this.testPass.dispose();\n\n        this.baseTarget.dispose();\n        this.accumulationTarget.dispose();\n\n    }\n\n    setSize( width, height ) {\n\n        this.baseTarget.setSize( width, height );\n        this.accumulationTarget.setSize( width, height );\n\n    }\n\n    render( renderer, writeBuffer = null /* readBuffer = null, deltaTime, maskActive */ ) {\n\n        const scene = this.scene;\n        if ( ! scene || ! scene.isScene ) return;\n\n        const cache = this._visibilityCache;\n        const testCache = this._depthTestCache;\n        const writeCache = this._depthWriteCache;\n\n        const opaqueMeshes = [];\n        const transparentMeshes = [];\n\n        function gatherMeshes() {\n\n            scene.traverse( ( object ) => {\n\n                if ( ! object.material ) return;\n\n                let materials = Array.isArray( object.material ) ? object.material : [ object.material ];\n                let isWboitCapable = true;\n\n                for ( let i = 0; i < materials.length; i ++ ) {\n                    if ( materials[i].isMeshWboitMaterial !== true || materials[i].transparent !== true ) {\n                        isWboitCapable = false;\n                        break;\n                    }\n                }\n\n                if ( ! isWboitCapable ) {\n                    opaqueMeshes.push( object );\n                } else {\n                    transparentMeshes.push( object );\n                }\n\n                cache.set( object, object.visible );\n\n            } );\n\n        }\n\n        function changeVisible( opaqueVisible = true, transparentVisible = true ) {\n\n            opaqueMeshes.forEach( mesh => mesh.visible = opaqueVisible );\n            transparentMeshes.forEach( mesh => mesh.visible = transparentVisible );\n\n        }\n\n        function resetVisible() {\n\n            for ( const [ key, value ] of cache ) key.visible = value;\n\n        }\n\n        function prepareWboitBlending( stage ) {\n\n            transparentMeshes.forEach( ( mesh ) => {\n\n                const materials = Array.isArray( mesh.material ) ? mesh.material : [ mesh.material ];\n\n                for ( let i = 0; i < materials.length; i ++ ) {\n                    if ( materials[i].isMeshWboitMaterial !== true || materials[i].transparent !== true ) continue;\n\n                    materials[i].uniforms[ 'renderStage' ].value = stage.toFixed( 1 );\n\n                    switch ( stage ) {\n\n                        case WboitStages.Acummulation:\n                            testCache.set( materials[i], materials[i].depthTest );\n                            writeCache.set( materials[i], materials[i].depthWrite );\n                            materials[i].blending = THREE.CustomBlending;\n                            materials[i].blendEquation = THREE.AddEquation;\n                            materials[i].blendSrc = THREE.OneFactor;\n                            materials[i].blendDst = THREE.OneFactor;\n                            materials[i].depthWrite = false;\n                            materials[i].depthTest = true;\n                            break;\n\n                        case WboitStages.Revealage:\n\n                            materials[i].blending = THREE.CustomBlending;\n                            materials[i].blendEquation = THREE.AddEquation;\n                            materials[i].blendSrc = THREE.ZeroFactor;\n                            materials[i].blendDst = THREE.OneMinusSrcAlphaFactor;\n                            materials[i].depthWrite = false;\n                            materials[i].depthTest = true;\n                            break;\n\n                        default:\n                            materials[i].blending = THREE.NormalBlending;\n                            materials[i].blendEquation = THREE.AddEquation\n                            materials[i].blendSrc = THREE.SrcAlphaFactor;\n                            materials[i].blendDst = THREE.OneMinusSrcAlphaFactor;\n                            materials[i].depthWrite = testCache.get( materials[i] );\n                            materials[i].depthTest = writeCache.get( materials[i] );\n\n                    }\n\n                }\n\n            } );\n\n        }\n\n        // Save Current State\n        const oldAutoClear = renderer.autoClear;;\n        const oldClearAlpha = renderer.getClearAlpha();\n        const oldRenderTarget = renderer.getRenderTarget();\n        const oldOverrideMaterial = scene.overrideMaterial;\n        renderer.autoClear = false;\n        renderer.getClearColor( this._oldClearColor );\n        scene.overrideMaterial = null;\n\n        // Gather Opaque / Transparent Meshes\n        gatherMeshes();\n\n        // Render Opaque Objects\n        changeVisible( true, false );\n        renderer.setRenderTarget( this.baseTarget );\n        renderer.setClearColor( _clearColorZero, 0.0 );\n        renderer.clear();\n        renderer.render( scene, this.camera );\n        changeVisible( false, true );\n\n        // Copy Opaque Render to Write Buffer (so we can re-use depth buffer)\n        if ( this.clearColor ) {\n            renderer.setRenderTarget( writeBuffer );\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n            renderer.clearColor();\n\t\t}\n        this.blendPass.render( renderer, writeBuffer, this.baseTarget );\n\n        // Render Transparent Objects, Accumulation Pass\n        prepareWboitBlending( WboitStages.Acummulation );\n        renderer.setRenderTarget( this.baseTarget );\n        renderer.setClearColor( _clearColorZero, 0.0 );\n        renderer.clearColor();\n        renderer.render( scene, this.camera );\n\n        // Copy Accumulation Render to temp target (so we can re-use depth buffer)\n        this.copyPass.render( renderer, this.accumulationTarget, this.baseTarget );\n\n        // Render Transparent Objects, Revealage Pass\n        prepareWboitBlending( WboitStages.Revealage );\n        renderer.setRenderTarget( this.baseTarget );\n        renderer.setClearColor( _clearColorOne, 1.0 );\n        renderer.clearColor();\n        renderer.render( scene, this.camera );\n\n        // Composite Transparent Objects\n        renderer.setRenderTarget( writeBuffer );\n        this.compositePass.uniforms[ 'tAccumulation' ].value = this.accumulationTarget.texture;\n        this.compositePass.uniforms[ 'tRevealage' ].value = this.baseTarget.texture; /* now holds revealage render */\n        this.compositePass.render( renderer, writeBuffer );\n\n        // Restore Original State\n        prepareWboitBlending( WboitStages.Normal );\n        resetVisible();\n        renderer.setRenderTarget( oldRenderTarget );\n        renderer.setClearColor( this._oldClearColor, oldClearAlpha );\n        scene.overrideMaterial = oldOverrideMaterial;\n        renderer.autoClear = oldAutoClear;\n\n        // Clear Caches\n        cache.clear();\n        testCache.clear();\n        writeCache.clear();\n    }\n\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Exports\n/////////////////////////////////////////////////////////////////////////////////////\n\nexport { WboitPass };\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Reference\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// Basic OIT Info:\n//      https://learnopengl.com/Guest-Articles/2020/OIT/Introduction\n//      https://en.wikipedia.org/wiki/Order-independent_transparency\n//\n// Weighted, Blended OIT:\n//      https://learnopengl.com/Guest-Articles/2020/OIT/Weighted-Blended\n//      https://therealmjp.github.io/posts/weighted-blended-oit/\n//\n// Multiple Render Targets:\n//      https://github.com/mrdoob/three.js/blob/master/examples/webgl2_multiple_rendertargets.html\n//\n// THREE Issue(s):\n//      https://github.com/mrdoob/three.js/issues/9977\n//      https://github.com/mrdoob/three.js/pull/24227\n//\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Acknowledgements\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// Original Paper on WBOIT:\n//      Description:    Weighted, Blended Order-Independent Transparency\n//      Author:         Morgan McGuire and Louis Bavoil\n//      License:        CC BYND 3.0\n//      Source(s):      http://jcgt.org/published/0002/02/09/\n//                      http://casual-effects.blogspot.com/2014/03/weighted-blended-order-independent.html\n//                      http://casual-effects.blogspot.com/2015/03/implemented-weighted-blended-order.html\n//                      http://casual-effects.blogspot.com/2015/03/colored-blended-order-independent.html\n//                      http://casual-effects.com/research/McGuire2016Transparency/index.html\n//\n// Working WebGL 2 Example:\n//      Description:    WebGL 2 Example: Weighted, Blended Order-independent Transparency\n//      Author:         Tarek Sherif <@tsherif>\n//      License:        Distributed under the MIT License\n//      Source:         https://github.com/tsherif/webgl2examples/blob/master/oit.html\n//\n// Previous Three.js Progress:\n//      Description:    Depth Peel Example\n//      Author:         Dusan Bosnjak <@pailhead>\n//      Source:         https://github.com/mrdoob/three.js/pull/15490\n//                      https://raw.githack.com/pailhead/three.js/depth-peel-stencil/examples/webgl_materials_depthpeel.html\n//\n//      Description:    Weighted, Blended Example\n//      Author:         Alexander Rose <@arose>\n//      Source(s):      https://github.com/mrdoob/three.js/issues/4814\n//                      https://github.com/arose/three.js/tree/oit\n//                      https://github.com/mrdoob/three.js/compare/dev...arose:three.js:oit\n//                      https://raw.githack.com/arose/three.js/oit/examples/webgl_oit.html\n//\n/////////////////////////////////////////////////////////////////////////////////////\n/////   License\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// MIT License\n//\n// three-wboit\n//      Copyright (c) 2022 Stephens Nunnally <@stevinz>\n//\n// Some Portions\n//      Copyright (c) 2010-2022 mrdoob and three.js authors\n//      Copyright (c) 2014 Alexander Rose\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n"],"names":["UniformsUtils","UniformsLib","ShaderMaterial","MultiplyOperation","THREE","Pass","ShaderPass","CopyShader"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAGA;IACA,MAAM,WAAW,GAAG;IACpB,IAAI,MAAM,EAAE,GAAG;IACf,IAAI,YAAY,EAAE,GAAG;IACrB,IAAI,SAAS,EAAE,GAAG;IAClB,EAAC;AACD;IACA,MAAM,gBAAgB,GAAG;AACzB;IACA;IACA;IACA;IACA;AACA;IACA,CAAC,QAAQ,EAAEA,mBAAa,CAAC,KAAK,EAAE;IAChC,QAAQ;IACR,YAAY,WAAW,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IACvC,YAAY,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IAClC,SAAS;IACT,EAAEC,iBAAW,CAAC,MAAM;IACpB,EAAEA,iBAAW,CAAC,WAAW;IACzB,EAAEA,iBAAW,CAAC,MAAM;IACpB,EAAEA,iBAAW,CAAC,KAAK;IACnB,EAAEA,iBAAW,CAAC,QAAQ;IACtB,EAAEA,iBAAW,CAAC,GAAG;IACjB,EAAE,EAAE;AACJ;IACA,CAAC,YAAY,YAAY,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL;IACA,CAAC,cAAc,YAAY,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,GAAG,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,GAAG,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL;IACA,CAAC,CAAC;AACF;IACA;AACA;IACA,MAAM,iBAAiB,SAASC,oBAAc,CAAC;AAC/C;IACA,CAAC,WAAW,EAAE,UAAU,GAAG,EAAE,GAAG;AAChC;IACA,EAAE,KAAK,EAAE,CAAC;AACV;IACA,EAAE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAClC;IACA,EAAE,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;AAClC;IACA,EAAE,MAAM,MAAM,GAAG,gBAAgB,CAAC;AAClC;IACA,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,EAAE,IAAI,CAAC,QAAQ,GAAGF,mBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzD,EAAE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAC1C,QAAQ,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;AACpD;IACA;AACA;IACA,EAAE,IAAI,CAAC,OAAO,GAAGG,uBAAiB,CAAC;AACnC;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC;IACA,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC/B,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;IAC9B,EAAE,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;IAClC,EAAE,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;AACnC;IACA,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AAClB;IACA;AACA;IACA,EAAE,MAAM,mBAAmB,GAAG;AAC9B;IACA;AACA;IACA,YAAY,SAAS;AACrB;IACA;AACA;IACA,YAAY,SAAS;IACrB,YAAY,KAAK;IACjB,YAAY,UAAU;IACtB,YAAY,mBAAmB;IAC/B,YAAY,OAAO;IACnB,YAAY,gBAAgB;IAC5B,YAAY,aAAa;IACzB,YAAY,UAAU;IACtB,YAAY,WAAW;IACvB,GAAG,QAAQ;IACX,YAAY,cAAc;IAC1B,YAAY,iBAAiB;AAC7B;IACA;AACA;IACA,YAAY,QAAQ;AACpB;IACA,GAAG,CAAC;AACJ;IACA,EAAE,MAAM,MAAM,YAAY,IAAI,mBAAmB,GAAG;AACpD;IACA,GAAG,MAAM,CAAC,cAAc,EAAE,IAAI,EAAE,YAAY,EAAE;AAC9C;IACA,IAAI,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,KAAK,CAAC,EAAE;AACpE;IACA,IAAI,GAAG,EAAE,WAAW,KAAK,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE;AAC5E;IACA,IAAI,EAAE,CAAC;AACP;IACA,GAAG;AACH;IACA,QAAQ,MAAM,CAAC,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,wBAAwB,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC;AACnG;IACA,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,CAAC;AAC/B;IACA,EAAE;AACF;IACA,IAAI,IAAI,EAAE,MAAM,GAAG;AACnB;IACA,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC;AACvB;IACA;AACA;IACA,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC;AAClC;IACA,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACxB;IACA,EAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IAClC,EAAE,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;AACpD;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC5B,EAAE,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;AAC9C;IACA,EAAE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AACxC;IACA,EAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAClC;IACA,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC9B,EAAE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,EAAE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAC1C,EAAE,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;AAChD;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IACpC,EAAE,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;IACtD,EAAE,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;IAClD,EAAE,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;AACpD;IACA,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACxB;IACA;AACA;IACA,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACpC;IACA,EAAE,OAAO,IAAI,CAAC;AACd;IACA,EAAE;AACF;IACA;;IC/TA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACK,UAAC,oBAAoB,GAAG;AAC7B;IACA,CAAC,QAAQ,EAAE;AACX;IACA,QAAQ,eAAe,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;IACxC,QAAQ,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;AACrC;IACA,EAAE;AACF;IACA,CAAC,YAAY,YAAY,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL;IACA,CAAC,cAAc,YAAY,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL;IACA;;ICjEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACK,UAAC,eAAe,GAAG;AACxB;IACA,CAAC,QAAQ,EAAE,EAAE;AACb;IACA,CAAC,YAAY,YAAY,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL;IACA,CAAC,cAAc,YAAY,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL;IACA;;ICvCA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAkBA;IACA,MAAM,eAAe,GAAG,IAAIC,gBAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACzD,MAAM,cAAc,GAAG,IAAIA,gBAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACxD;IACA;IACA;IACA;AACA;IACA,MAAM,SAAS,SAASC,YAAI,CAAC;AAC7B;IACA,IAAI,WAAW,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,GAAG;AACpE;IACA,QAAQ,KAAK,EAAE,QAAQ,GAAG,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC,iDAAiD,CAAC,EAAE,CAAC;AACtG;IACA,QAAQ,KAAK,EAAE,CAAC;AAChB;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB;IACA,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACrC,EAAE,IAAI,CAAC,UAAU,GAAG,EAAE,UAAU,KAAK,SAAS,KAAK,UAAU,GAAG,CAAC,CAAC;AAClE;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,EAAE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB;IACA;AACA;IACA,EAAE,IAAI,CAAC,cAAc,GAAG,IAAID,gBAAK,CAAC,KAAK,EAAE,CAAC;IAC1C,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;IACzC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;IAC1C,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1C;IACA;AACA;IACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAIE,wBAAU,EAAEC,wBAAU,EAAE,CAAC;IACtD,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;IAClD,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;IACnD,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,GAAGH,gBAAK,CAAC,cAAc,CAAC;IAChE,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC;IAClE,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,GAAGA,gBAAK,CAAC,cAAc,CAAC;IAChE,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,GAAGA,gBAAK,CAAC,sBAAsB,CAAC;AACxE;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAIE,wBAAU,EAAEC,wBAAU,EAAE,CAAC;IACrD,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;IACjD,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;IAClD,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAGH,gBAAK,CAAC,cAAc,CAAC;IAC/D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC;IACjE,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAGA,gBAAK,CAAC,SAAS,CAAC;IAC1D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAGA,gBAAK,CAAC,UAAU,CAAC;AAC3D;IACA,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAIE,wBAAU,EAAE,oBAAoB,EAAE,CAAC;IACpE,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;IACvD,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,GAAGF,gBAAK,CAAC,cAAc,CAAC;IACpE,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC;IACtE,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,GAAGA,gBAAK,CAAC,sBAAsB,CAAC;IAC5E,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,GAAGA,gBAAK,CAAC,cAAc,CAAC;AACpE;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAIE,wBAAU,EAAE,eAAe,EAAE,CAAC;IAC1D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAGF,gBAAK,CAAC,cAAc,CAAC;IAC/D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC;IACjE,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAGA,gBAAK,CAAC,SAAS,CAAC;IAC1D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAGA,gBAAK,CAAC,UAAU,CAAC;AAC3D;IACA;AACA;IACA,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAIA,gBAAK,CAAC,OAAO,EAAE,EAAE,CAAC;IAC7D,QAAQ,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAC;IACpD,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;IACvD,QAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;AACzD;IACA,QAAQ,MAAM,EAAE,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;AACzC;IACA,QAAQ,MAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,EAAE,CAAC;IACrD,QAAQ,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAC;IACvD,QAAQ,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;AACtD;IACA,QAAQ,MAAM,WAAW,GAAG,EAAEA,gBAAK,CAAC,SAAS,EAAEA,gBAAK,CAAC,aAAa,EAAEA,gBAAK,CAAC,eAAe,EAAEA,gBAAK,CAAC,gBAAgB,EAAE,CAAC;IACpH,QAAQ,MAAM,aAAa,GAAG,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,aAAa,EAAE,CAAC;IAC7F,QAAQ,MAAM,aAAa,GAAG,EAAE,IAAI,YAAY,EAAE,CAAC,EAAE,EAAE,IAAI,YAAY,EAAE,CAAC,EAAE,EAAE,IAAI,WAAW,EAAE,CAAC,EAAE,EAAE,IAAI,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;IAC1H,QAAQ,MAAM,aAAa,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACjD;IACA,QAAQ,IAAI,UAAU,CAAC;AACvB;IACA,QAAQ,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG;AACxD;IACA,YAAY,MAAM,UAAU,GAAG,IAAIA,gBAAK,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE;IAClE,gBAAgB,SAAS,EAAEA,gBAAK,CAAC,aAAa;IAC9C,gBAAgB,SAAS,EAAEA,gBAAK,CAAC,aAAa;IAC9C,gBAAgB,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE;IACtC,gBAAgB,MAAM,EAAEA,gBAAK,CAAC,UAAU;IACxC,gBAAgB,aAAa,EAAE,KAAK;IACpC,gBAAgB,WAAW,EAAE,IAAI;IACjC,aAAa,EAAE,CAAC;AAChB;IACA,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;AACzD;IACA,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC,EAAE,EAAE,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC;IACzF,YAAY,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,EAAE,EAAE,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC;IAC/D,YAAY,IAAI,EAAE,CAAC,EAAE,IAAI,aAAa,EAAE,CAAC,EAAE,CAAC;IAC5C,YAAY,IAAI,EAAE,CAAC,EAAE,IAAI,aAAa,EAAE,CAAC,EAAE,CAAC;IAC5C,YAAY,IAAI,EAAE,CAAC,EAAE,IAAI,aAAa,EAAE,CAAC,EAAE,CAAC;IAC5C,YAAY,IAAI,EAAE,CAAC,EAAE,IAAI,aAAa,EAAE,CAAC,EAAE,CAAC;AAC5C;IACA,YAAY,KAAK,EAAE,CAAC,sBAAsB,EAAE,EAAE,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,oBAAoB;IACxF,gBAAgB,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG;IAC3F,gBAAgB,UAAU,GAAG,WAAW,EAAE,CAAC,EAAE,CAAC;IAC9C,gBAAgB,UAAU,CAAC,OAAO,EAAE,CAAC;IACrC,gBAAgB,MAAM;IACtB,aAAa;AACb;IACA,YAAY,UAAU,CAAC,OAAO,EAAE,CAAC;AACjC;IACA,SAAS;AACT;IACA,QAAQ,QAAQ,CAAC,eAAe,EAAE,SAAS,EAAE,CAAC;IAC9C,QAAQ,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,aAAa,EAAE,CAAC;AACrE;IACA;AACA;IACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAIA,gBAAK,CAAC,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE;IACxF,YAAY,SAAS,EAAEA,gBAAK,CAAC,aAAa;IAC1C,YAAY,SAAS,EAAEA,gBAAK,CAAC,aAAa;IAC1C,YAAY,IAAI,EAAE,UAAU;IAC5B,YAAY,MAAM,EAAEA,gBAAK,CAAC,UAAU;IACpC,YAAY,aAAa,EAAE,KAAK;IAChC,YAAY,WAAW,EAAE,IAAI;IAC7B,SAAS,EAAE,CAAC;AACZ;IACA,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAIA,gBAAK,CAAC,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE;IAChG,YAAY,SAAS,EAAEA,gBAAK,CAAC,aAAa;IAC1C,YAAY,SAAS,EAAEA,gBAAK,CAAC,aAAa;IAC1C,YAAY,IAAI,EAAE,UAAU;IAC5B,YAAY,MAAM,EAAEA,gBAAK,CAAC,UAAU;IACpC,YAAY,aAAa,EAAE,KAAK;IAChC,YAAY,WAAW,EAAE,KAAK;IAC9B,SAAS,EAAE,CAAC;AACZ;IACA,KAAK;AACL;IACA,IAAI,OAAO,GAAG;AACd;IACA,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IACjC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAChC,QAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;IACrC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;AAChC;IACA,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IAClC,QAAQ,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;AAC1C;IACA,KAAK;AACL;IACA,IAAI,OAAO,EAAE,KAAK,EAAE,MAAM,GAAG;AAC7B;IACA,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;IACjD,QAAQ,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;AACzD;IACA,KAAK;AACL;IACA,IAAI,MAAM,EAAE,QAAQ,EAAE,WAAW,GAAG,IAAI,kDAAkD;AAC1F;IACA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACjC,QAAQ,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,CAAC,OAAO,GAAG,OAAO;AACjD;IACA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC5C,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;IAC/C,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;AACjD;IACA,QAAQ,MAAM,YAAY,GAAG,EAAE,CAAC;IAChC,QAAQ,MAAM,iBAAiB,GAAG,EAAE,CAAC;AACrC;IACA,QAAQ,SAAS,YAAY,GAAG;AAChC;IACA,YAAY,KAAK,CAAC,QAAQ,EAAE,EAAE,MAAM,MAAM;AAC1C;IACA,gBAAgB,KAAK,EAAE,MAAM,CAAC,QAAQ,GAAG,OAAO;AAChD;IACA,gBAAgB,IAAI,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,QAAQ,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzG,gBAAgB,IAAI,cAAc,GAAG,IAAI,CAAC;AAC1C;IACA,gBAAgB,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG;IAC9D,oBAAoB,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,mBAAmB,KAAK,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,IAAI,GAAG;IAC1G,wBAAwB,cAAc,GAAG,KAAK,CAAC;IAC/C,wBAAwB,MAAM;IAC9B,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,KAAK,EAAE,cAAc,GAAG;IACxC,oBAAoB,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC;IAChD,iBAAiB,MAAM;IACvB,oBAAoB,iBAAiB,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC;IACrD,iBAAiB;AACjB;IACA,gBAAgB,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC;AACpD;IACA,aAAa,EAAE,CAAC;AAChB;IACA,SAAS;AACT;IACA,QAAQ,SAAS,aAAa,EAAE,aAAa,GAAG,IAAI,EAAE,kBAAkB,GAAG,IAAI,GAAG;AAClF;IACA,YAAY,YAAY,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,aAAa,EAAE,CAAC;IACzE,YAAY,iBAAiB,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,CAAC;AACnF;IACA,SAAS;AACT;IACA,QAAQ,SAAS,YAAY,GAAG;AAChC;IACA,YAAY,MAAM,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;AACtE;IACA,SAAS;AACT;IACA,QAAQ,SAAS,oBAAoB,EAAE,KAAK,GAAG;AAC/C;IACA,YAAY,iBAAiB,CAAC,OAAO,EAAE,EAAE,IAAI,MAAM;AACnD;IACA,gBAAgB,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;AACrG;IACA,gBAAgB,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG;IAC9D,oBAAoB,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,mBAAmB,KAAK,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,IAAI,GAAG,SAAS;AACnH;IACA,oBAAoB,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,aAAa,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;AACtF;IACA,oBAAoB,SAAS,KAAK;AAClC;IACA,wBAAwB,KAAK,WAAW,CAAC,YAAY;IACrD,4BAA4B,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAClF,4BAA4B,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IACpF,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,cAAc,CAAC;IACzE,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC;IAC3E,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,SAAS,CAAC;IACpE,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,SAAS,CAAC;IACpE,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5D,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1D,4BAA4B,MAAM;AAClC;IACA,wBAAwB,KAAK,WAAW,CAAC,SAAS;AAClD;IACA,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,cAAc,CAAC;IACzE,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC;IAC3E,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,UAAU,CAAC;IACrE,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,sBAAsB,CAAC;IACjF,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5D,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1D,4BAA4B,MAAM;AAClC;IACA,wBAAwB;IACxB,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,cAAc,CAAC;IACzE,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,GAAGA,gBAAK,CAAC,YAAW;IAC1E,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,cAAc,CAAC;IACzE,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGA,gBAAK,CAAC,sBAAsB,CAAC;IACjF,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;IACpF,4BAA4B,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;AACpF;IACA,qBAAqB;AACrB;IACA,iBAAiB;AACjB;IACA,aAAa,EAAE,CAAC;AAChB;IACA,SAAS;AACT;IACA;IACA,QAAQ,MAAM,YAAY,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IACjD,QAAQ,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAC;IACvD,QAAQ,MAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,EAAE,CAAC;IAC3D,QAAQ,MAAM,mBAAmB,GAAG,KAAK,CAAC,gBAAgB,CAAC;IAC3D,QAAQ,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;IACnC,QAAQ,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;IACtD,QAAQ,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACtC;IACA;IACA,QAAQ,YAAY,EAAE,CAAC;AACvB;IACA;IACA,QAAQ,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IACrC,QAAQ,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpD,QAAQ,QAAQ,CAAC,aAAa,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC;IACvD,QAAQ,QAAQ,CAAC,KAAK,EAAE,CAAC;IACzB,QAAQ,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;IAC9C,QAAQ,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AACrC;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,UAAU,GAAG;IAC/B,YAAY,QAAQ,CAAC,eAAe,EAAE,WAAW,EAAE,CAAC;IACpD,GAAG,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;IAC9D,YAAY,QAAQ,CAAC,UAAU,EAAE,CAAC;IAClC,GAAG;IACH,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;AACxE;IACA;IACA,QAAQ,oBAAoB,EAAE,WAAW,CAAC,YAAY,EAAE,CAAC;IACzD,QAAQ,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpD,QAAQ,QAAQ,CAAC,aAAa,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC;IACvD,QAAQ,QAAQ,CAAC,UAAU,EAAE,CAAC;IAC9B,QAAQ,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9C;IACA;IACA,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;AACnF;IACA;IACA,QAAQ,oBAAoB,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC;IACtD,QAAQ,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpD,QAAQ,QAAQ,CAAC,aAAa,EAAE,cAAc,EAAE,GAAG,EAAE,CAAC;IACtD,QAAQ,QAAQ,CAAC,UAAU,EAAE,CAAC;IAC9B,QAAQ,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9C;IACA;IACA,QAAQ,QAAQ,CAAC,eAAe,EAAE,WAAW,EAAE,CAAC;IAChD,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,eAAe,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;IAC/F,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;IACpF,QAAQ,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;AAC3D;IACA;IACA,QAAQ,oBAAoB,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC;IACnD,QAAQ,YAAY,EAAE,CAAC;IACvB,QAAQ,QAAQ,CAAC,eAAe,EAAE,eAAe,EAAE,CAAC;IACpD,QAAQ,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,aAAa,EAAE,CAAC;IACrE,QAAQ,KAAK,CAAC,gBAAgB,GAAG,mBAAmB,CAAC;IACrD,QAAQ,QAAQ,CAAC,SAAS,GAAG,YAAY,CAAC;AAC1C;IACA;IACA,QAAQ,KAAK,CAAC,KAAK,EAAE,CAAC;IACtB,QAAQ,SAAS,CAAC,KAAK,EAAE,CAAC;IAC1B,QAAQ,UAAU,CAAC,KAAK,EAAE,CAAC;IAC3B,KAAK;AACL;IACA,CAAC;AAOD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;;;;;;;;"}