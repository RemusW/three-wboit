{"version":3,"file":"index.module.js","sources":["../src/shaders/FillShader.js","../src/shaders/MeshBasicShaderMaterial.js","../src/materials/MeshWboitMaterial.js","../src/shaders/sRGBShader.js","../src/shaders/WboitCompositeShader.js","../src/WboitPass.js","../src/WboitUtils.js"],"sourcesContent":["/**\r\n * Color fill shader\r\n */\r\n\r\nimport {\r\n\tColor\r\n} from 'three';\r\n\r\nconst FillShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'color': { value: new Color( 0xffffff ) },\r\n\t\t'opacity': { value: 1.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform vec3 color;\r\n\t\tuniform float opacity;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tgl_FragColor = vec4( color, opacity );\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { FillShader };\r\n","\r\n/**\r\n * MeshBasicMaterial as a ShaderMaterial\r\n */\r\n\r\nimport {\r\n    ShaderChunk,\r\n    UniformsLib,\r\n\tUniformsUtils\r\n} from 'three';\r\n\r\nconst MeshBasicShaderMaterial = {\r\n\r\n    defines: { USE_MAP: '', USE_UV: '', },\r\n\r\n    uniforms: UniformsUtils.merge( [\r\n        UniformsLib.common,\r\n        UniformsLib.specularmap,\r\n        UniformsLib.envmap,\r\n        UniformsLib.aomap,\r\n        UniformsLib.lightmap,\r\n        UniformsLib.fog\r\n    ] ),\r\n\r\n    vertexShader: ShaderChunk.meshbasic_vert,\r\n\r\n    fragmentShader: ShaderChunk.meshbasic_frag,\r\n\r\n};\r\n\r\nexport { MeshBasicShaderMaterial };\r\n","/**\n * MeshWboitMaterial\n *\n * Basic material with support for weighted, blended order-independent transparency\n */\n\nimport {\n  UniformsUtils,\n  UniformsLib,\n  ShaderMaterial,\n  MultiplyOperation,\n} from \"three\";\n\nconst WboitStages = {\n  Normal: 0.0,\n  Acummulation: 1.0,\n  Revealage: 2.0,\n};\n\nconst WboitBasicShader = {\n  // based on MeshBasicMaterial\n  // https://github.com/mrdoob/three.js/blob/dev/src/materials/MeshBasicMaterial.js\n  // https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib.js\n  // https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib/meshbasic.glsl.js\n\n  uniforms: UniformsUtils.merge([\n    {\n      renderStage: { value: 0.0 },\n      weight: { value: 1.0 },\n    },\n    UniformsLib.common,\n    UniformsLib.specularmap,\n    UniformsLib.envmap,\n    UniformsLib.aomap,\n    UniformsLib.lightmap,\n    UniformsLib.fog,\n  ]),\n\n  vertexShader: /* glsl */ `\n\n\t\t// MeshBasicMaterial\n\n\t\t#include <common>\n\t\t#include <uv_pars_vertex>\n\t\t#include <envmap_pars_vertex>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <morphtarget_pars_vertex>\n\t\t#include <skinning_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tvoid main() {\n\n\t\t\t// MeshBasicMaterial\n\n\t\t\t#include <uv_vertex>\n\t\t\t#include <color_vertex>\n\t\t\t#include <morphcolor_vertex>\n\n\t\t\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\n\t\t\t\t#include <beginnormal_vertex>\n\t\t\t\t#include <morphnormal_vertex>\n\t\t\t\t#include <skinbase_vertex>\n\t\t\t\t#include <skinnormal_vertex>\n\t\t\t\t#include <defaultnormal_vertex>\n\n\t\t\t#endif\n\n\t\t\t#include <begin_vertex>\n\t\t\t#include <morphtarget_vertex>\n\t\t\t#include <skinning_vertex>\n\t\t\t#include <project_vertex>\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\n\t\t\t#include <worldpos_vertex>\n\t\t\t#include <envmap_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}`,\n\n  fragmentShader: /* glsl */ `\n\n\t\tprecision highp float;\n\t\tprecision highp int;\n\n\t\t// MeshBasicMaterial\n\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifndef FLAT_SHADED\n\n\t\t\tvarying vec3 vNormal;\n\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <dithering_pars_fragment>\n\t\t#include <color_pars_fragment>\n\t\t#include <uv_pars_fragment>\n\t\t#include <map_pars_fragment>\n\t\t#include <alphamap_pars_fragment>\n\t\t#include <alphatest_pars_fragment>\n\t\t#include <alphahash_pars_fragment>\n\t\t#include <aomap_pars_fragment>\n\t\t#include <lightmap_pars_fragment>\n\t\t#include <envmap_common_pars_fragment>\n\t\t#include <envmap_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <specularmap_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\t// MeshWboitMaterial\n\n\t\tuniform float renderStage;\n\t\tuniform float weight;\n\n\t\tvoid main() {\n\n\t\t\t// MeshBasicMaterial\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <map_fragment>\n\t\t\t#include <color_fragment>\n\t\t\t#include <alphamap_fragment>\n\t\t\t#include <alphatest_fragment>\n\t\t\t#include <alphahash_fragment>\n\t\t\t#include <specularmap_fragment>\n\n\t\t\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t\t\t// accumulation (baked indirect lighting only)\n\n\t\t\t#ifdef USE_LIGHTMAP\n\n\t\t\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\t\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\n\t\t\t#else\n\n\t\t\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t\t\t#endif\n\n\t\t\t// modulation\n\n\t\t\t#include <aomap_fragment>\n\n\t\t\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\t\t\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t\t\t#include <envmap_fragment>\n\t\t\t#include <opaque_fragment>\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\t\t\t#include <dithering_fragment>\n\n\t\t\t// MeshWboitMaterial\n\n\t\t\tif ( renderStage == ${WboitStages.Acummulation.toFixed(1)} ) {\n\n\t\t\t\tvec4 accum = gl_FragColor.rgba;\n\n\t\t\t\t#ifndef PREMULTIPLIED_ALPHA\n\t\t\t\t\t// accum.rgb *= accum.a;\n\t\t\t\t\tvec4 alphaMapColor = texture2D(alphamapTexture, vUv);\n\t\t\t\t\tfloat alphaValue = alphaMapColor.r;\n\t\t\t\t\taccum.rgb *= alphaValue;\n\t\t\t\t#endif\n\n\t\t\t\tfloat z = gl_FragCoord.z;\n\n\t\t\t\t/* Equation #9 */\n\t\t\t\tfloat w = accum.a * clamp( 0.03 / ( 1e-5 + pow( abs( z ) / 200.0, 4.0 ) ), 0.01, 300.0 );\n\n\t\t\t\t/* McGuire 10/2013 */\n\t\t\t\t// float w = clamp( pow( ( accum.a * 8.0 + 0.01 ) * ( - z * 0.95 + 1.0 ), 3.0 ) * 1e3, 1e-2, 3e2 );\n\n\t\t\t\t/* Stevinz, Adjustable Weight */\n\t\t\t\t//float scaleWeight = 0.7 + ( 0.3 * weight );\n\t\t\t\t//float w = clamp( pow( ( accum.a * 8.0 + 0.001 ) * ( - z * scaleWeight + 1.0 ), 3.0 ) * 1000.0, 0.001, 300.0 );\n\n\t\t\t\tgl_FragColor = accum * w;\n\t\t\t\tgl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n\n\t\t\t} else if ( renderStage == ${WboitStages.Revealage.toFixed(1)} ) {\n\n\t\t\t\t/* McGuire 10/2013 */\n\t\t\t\tgl_FragColor = vec4( gl_FragColor.a );\n\n\t\t\t\t/* Stevinz, Distance Weighted */\n\t\t\t\t//gl_FragColor = vec4( gl_FragColor.a * gl_FragCoord.z );\n\n\t\t\t}\n\n\t\t\t\tgl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n\t\t}`,\n};\n\n//\n\nclass MeshWboitMaterial extends ShaderMaterial {\n  constructor(parameters = {}) {\n    super();\n\n    this.isMeshWboitMaterial = true;\n\n    this.type = \"MeshWboitMaterial\";\n\n    // Flag for WboitPass\n\n    this.wboitEnabled = true;\n\n    //\n\n    const shader = WboitBasicShader;\n\n    this.defines = {};\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.vertexShader = shader.vertexShader;\n    this.fragmentShader = shader.fragmentShader;\n\n    // properties (no uniforms)\n\n    this.combine = MultiplyOperation;\n\n    this.transparent = true;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = \"round\";\n    this.wireframeLinejoin = \"round\";\n\n    this.fog = true;\n\n    // properties (associated w/ uniforms)\n\n    const exposePropertyNames = [\n      // Material\n\n      \"opacity\",\n\n      // MeshBasicMaterial\n\n      \"diffuse\",\n      \"map\",\n      \"lightMap\",\n      \"lightMapIntensity\",\n      \"aoMap\",\n      \"aoMapIntensity\",\n      \"specularMap\",\n      \"alphaMap\",\n      \"alphaTest\",\n      \"envMap\",\n      \"reflectivity\",\n      \"refractionRatio\",\n\n      // MeshWboitMaterial,\n\n      \"weight\",\n    ];\n\n    for (const propertyName of exposePropertyNames) {\n      Object.defineProperty(this, propertyName, {\n        get: function () {\n          return this.uniforms[propertyName].value;\n        },\n\n        set: function (value) {\n          this.uniforms[propertyName].value = value;\n        },\n      });\n    }\n\n    Object.defineProperty(\n      this,\n      \"color\",\n      Object.getOwnPropertyDescriptor(this, \"diffuse\")\n    );\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    // MeshBasicMaterial\n\n    this.color.copy(source.color);\n\n    this.map = source.map;\n\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n\n    this.specularMap = source.specularMap;\n\n    this.alphaMap = source.alphaMap;\n\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n\n    this.fog = source.fog;\n\n    // MeshWboitMaterial\n\n    this.weight = source.weight;\n\n    return this;\n  }\n}\n\nexport { MeshWboitMaterial, WboitStages };\n","/**\r\n * sRGBShader\r\n */\r\n\r\nconst sRGBShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null }\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\t\tvarying vec2 vUv;\r\n\t\tvoid main() {\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tvarying vec2 vUv;\r\n\t\tvoid main() {\r\n\t\t\tvec4 tex = texture2D( tDiffuse, vUv );\r\n\r\n            // Set color to fully opaque\r\n\t\t\t// tex.rgb *= tex.a;\r\n\t\t\ttex.a = 1.0;\r\n\r\n\t\t\t// LinearTosRGB( tex );\r\n            tex = vec4( mix( pow( tex.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), tex.rgb * 12.92, vec3( lessThanEqual( tex.rgb, vec3( 0.0031308 ) ) ) ), tex.a );\r\n\r\n            // Output\r\n            gl_FragColor = tex;\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { sRGBShader };\r\n","/**\r\n * Combine accumulation and revealage for weighted, blended order-independent transparency\r\n */\r\n\r\nconst WboitCompositeShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tAccumulation': { value: null },\r\n\t\t'tRevealage': { value: null },\r\n\t\t'uGamma': { value: 0 },\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tprecision highp float;\r\n\t\tprecision highp int;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tuniform sampler2D tAccumulation;\r\n\t\tuniform sampler2D tRevealage;\r\n\t\tuniform float uGamma;\r\n\r\n\t\tfloat EPSILON = 0.00001;\r\n\r\n\t\tbool fuzzyEqual( float a, float b ) {\r\n\r\n\t\t\treturn abs( a - b ) <= ( abs( a ) < abs( b ) ? abs( b ) : abs( a ) ) * EPSILON;\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tfloat reveal = texture2D( tRevealage, vUv ).r;\r\n\t\t\tif ( fuzzyEqual( reveal, 1.0 ) ) discard;\r\n\r\n\t\t\tvec4 accum = texture2D( tAccumulation, vUv );\r\n\r\n\t\t\tvec4 composite = vec4( accum.rgb / clamp( accum.a, 0.0001, 50000.0 ), reveal );\r\n\t\t\tvec4 color = clamp( composite, 0.01, 300.0 );\r\n\r\n\t\t\t// LinearTosRGB( color );\r\n\t\t\tif (uGamma > 0.0) {\r\n\t\t\t\tcolor.rgb = mix( pow( color.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), color.rgb * 12.92, vec3( lessThanEqual( color.rgb, vec3( 0.0031308 ) ) ) );\r\n\t\t\t}\r\n\r\n\t\t\tgl_FragColor = color;\r\n\r\n\t\t}`,\r\n\r\n};\r\n\r\nexport { WboitCompositeShader };\r\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description WboitRenderer\n// @about       Weighted, blended order-independent transparency renderer for use with three.js WebGLRenderer\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2022 Stephens Nunnally\n// @source      https://github.com/stevinz/three-wboit\n//\n//      See end of file for license details and acknowledgements\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport {\n  AddEquation,\n  Color,\n  CustomBlending,\n  FloatType,\n  HalfFloatType,\n  NearestFilter,\n  OneFactor,\n  OneMinusSrcAlphaFactor,\n  RGBAFormat,\n  SrcAlphaFactor,\n  SRGBColorSpace,\n  UnsignedByteType,\n  Vector2,\n  WebGLRenderTarget,\n  ZeroFactor,\n} from \"three\";\n\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass\";\n\nimport { FillShader } from \"./shaders/FillShader.js\";\nimport { WboitCompositeShader } from \"./shaders/WboitCompositeShader.js\";\nimport { WboitStages } from \"./materials/MeshWboitMaterial.js\";\n\nconst _clearColorZero = new Color(0.0, 0.0, 0.0);\nconst _clearColorOne = new Color(1.0, 1.0, 1.0);\n\nconst CopyShader = {\n  name: \"CopyShader\",\n\n  uniforms: {\n    tDiffuse: { value: null },\n    opacity: { value: 1.0 },\n  },\n\n  vertexShader: /* glsl */ `\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n  fragmentShader: /* glsl */ `\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor.a *= opacity;\n      gl_FragColor = vec4(1.0);\n\n\t\t}`,\n};\n\nconst CopyAlphaTestShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    uGamma: { value: 0 },\n  },\n\n  vertexShader: /* glsl */ `\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n  fragmentShader: /* glsl */ `\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float uGamma;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 color = texture2D( tDiffuse, vUv );\n\t\t\tif ( color.a == 0.0 ) discard;\n\n\t\t\t// LinearTosRGB( color );\n\t\t\tif (uGamma > 0.0) {\n\t\t\t\tcolor.rgb = mix( pow( color.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), color.rgb * 12.92, vec3( lessThanEqual( color.rgb, vec3( 0.0031308 ) ) ) );\n\t\t\t}\n\n\t\t\tgl_FragColor = vec4(color.rgb, 1.0);\n\n\t\t}`,\n};\n\n/**\n * Weighted, blended order independent transparency pass.\n * Transparent meshes should use MeshWboitMaterial.\n */\nclass WboitPass extends Pass {\n  constructor(renderer, scene, camera, clearColor, clearAlpha) {\n    if (!renderer)\n      return console.error(\"WboitPass: Renderer must be supplied!\");\n\n    super();\n\n    this.scene = scene;\n    this.camera = camera;\n\n    this.clearColor = clearColor;\n    this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n\n    this.clear = false;\n    this.clearDepth = false;\n    this.needsSwap = false;\n\n    // Internal\n\n    this._oldClearColor = new Color();\n    this._blendingCache = new Map();\n    this._blendEquationCache = new Map();\n    this._blendSrcCache = new Map();\n    this._blendDstCache = new Map();\n    this._depthTestCache = new Map();\n    this._depthWriteCache = new Map();\n    this._visibilityCache = new Map();\n\n    // Passes\n\n    this.opaquePass = new ShaderPass(CopyAlphaTestShader);\n    this.opaquePass.material.depthTest = false;\n    this.opaquePass.material.depthWrite = false;\n    this.opaquePass.material.blending = CustomBlending;\n    this.opaquePass.material.blendEquation = AddEquation;\n    this.opaquePass.material.blendSrc = OneFactor;\n    this.opaquePass.material.blendDst = ZeroFactor;\n\n    this.transparentPass = new ShaderPass(CopyAlphaTestShader);\n    this.transparentPass.material.depthTest = false;\n    this.transparentPass.material.depthWrite = false;\n    this.transparentPass.material.blending = CustomBlending;\n    this.transparentPass.material.blendEquation = AddEquation;\n    this.transparentPass.material.blendSrc = OneFactor;\n    this.transparentPass.material.blendDst = OneMinusSrcAlphaFactor;\n\n    this.copyPass = new ShaderPass(CopyShader);\n    this.copyPass.material.depthTest = false;\n    this.copyPass.material.depthWrite = false;\n    this.copyPass.material.blending = CustomBlending;\n    this.copyPass.material.blendEquation = AddEquation;\n    this.copyPass.material.blendSrc = OneFactor;\n    this.copyPass.material.blendDst = ZeroFactor;\n\n    this.compositePass = new ShaderPass(WboitCompositeShader);\n    this.compositePass.material.transparent = true;\n    this.compositePass.material.blending = CustomBlending;\n    this.compositePass.material.blendEquation = AddEquation;\n    this.compositePass.material.blendSrc = OneMinusSrcAlphaFactor;\n    this.compositePass.material.blendDst = SrcAlphaFactor;\n\n    const testPass = new ShaderPass(FillShader);\n    const testR = 1.0;\n    const testG = 1.0;\n    const testB = 1.0;\n    const testA = 0.0;\n    testPass.material.uniforms[\"color\"].value = new Color(testR, testG, testB);\n    testPass.material.uniforms[\"opacity\"].value = testA;\n    testPass.material.blending = CustomBlending;\n    testPass.material.blendEquation = AddEquation;\n    testPass.material.blendSrc = OneFactor;\n    testPass.material.blendDst = ZeroFactor;\n\n    // Find Best Render Target Type\n    // gl.getExtension( 'EXT_color_buffer_float' ) - lacking support, see:\n    // https://stackoverflow.com/questions/28827511/webgl-ios-render-to-floating-point-texture\n\n    const size = renderer.getSize(new Vector2());\n    const pixelRatio = renderer.getPixelRatio();\n    const effectiveWidth = size.width * pixelRatio;\n    const effectiveHeight = size.height * pixelRatio;\n\n    const gl = renderer.getContext();\n\n    const oldTarget = renderer.getRenderTarget();\n    const oldClearAlpha = renderer.getClearAlpha();\n    renderer.getClearColor(this._oldClearColor);\n\n    const targetTypes = [FloatType, HalfFloatType, UnsignedByteType];\n    const targetGlTypes = [gl.FLOAT, gl.HALF_FLOAT, gl.UNSIGNED_BYTE];\n    const targetBuffers = [\n      new Float32Array(4),\n      new Uint16Array(4),\n      new Uint8Array(4),\n    ];\n    const targetDivisor = [1, 15360, 255];\n\n    let targetType;\n\n    for (let i = 0; i < targetTypes.length; i++) {\n      const testTarget = new WebGLRenderTarget(1, 1, {\n        minFilter: NearestFilter,\n        magFilter: NearestFilter,\n        type: targetTypes[i],\n        format: RGBAFormat,\n        stencilBuffer: false,\n        depthBuffer: true,\n      });\n\n      testPass.render(renderer, testTarget);\n\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, targetGlTypes[i], targetBuffers[i]);\n      const rgba = Array.apply([], targetBuffers[i]);\n      rgba[0] /= targetDivisor[i];\n      rgba[1] /= targetDivisor[i];\n      rgba[2] /= targetDivisor[i];\n      rgba[3] /= targetDivisor[i];\n\n      function fuzzyEqual(a, b, epsilon = 0.01) {\n        return a < b + epsilon && a > b - epsilon;\n      }\n\n      let complete =\n        gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n      complete = complete && fuzzyEqual(rgba[0], testR);\n      complete = complete && fuzzyEqual(rgba[1], testG);\n      complete = complete && fuzzyEqual(rgba[2], testB);\n      complete = complete && fuzzyEqual(rgba[3], testA);\n      complete = complete || i === targetTypes.length - 1;\n\n      testTarget.dispose();\n\n      if (complete) {\n        targetType = targetTypes[i];\n        break;\n      }\n    }\n\n    if (testPass.dispose) testPass.dispose();\n    renderer.setRenderTarget(oldTarget);\n    renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n\n    // Render Targets\n\n    this.baseTarget = new WebGLRenderTarget(effectiveWidth, effectiveHeight, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter,\n      type: targetType,\n      format: RGBAFormat,\n      stencilBuffer: false,\n      depthBuffer: true,\n    });\n\n    this.accumulationTarget = new WebGLRenderTarget(\n      effectiveWidth,\n      effectiveHeight,\n      {\n        minFilter: NearestFilter,\n        magFilter: NearestFilter,\n        type: targetType,\n        format: RGBAFormat,\n        stencilBuffer: false,\n        depthBuffer: false,\n      }\n    );\n  }\n\n  dispose() {\n    if (this.opaquePass.dispose) this.opaquePass.dispose();\n    if (this.transparentPass.dispose) this.transparentPass.dispose();\n    if (this.copyPass.dispose) this.copyPass.dispose();\n    if (this.compositePass.dispose) this.compositePass.dispose();\n\n    this.baseTarget.dispose();\n    this.accumulationTarget.dispose();\n  }\n\n  setSize(width, height) {\n    this.baseTarget.setSize(width, height);\n    this.accumulationTarget.setSize(width, height);\n  }\n\n  render(\n    renderer,\n    writeBuffer = null /* readBuffer = null, deltaTime, maskActive */\n  ) {\n    console.log(\"ASDASDFFF\");\n    const scene = this.scene;\n    if (!scene || !scene.isScene) return;\n\n    const cache = this._visibilityCache;\n    const blendingCache = this._blendingCache;\n    const blendEquationCache = this._blendEquationCache;\n    const blendSrcCache = this._blendSrcCache;\n    const blendDstCache = this._blendDstCache;\n    const testCache = this._depthTestCache;\n    const writeCache = this._depthWriteCache;\n\n    const opaqueMeshes = [];\n    const transparentMeshes = [];\n    const wboitMeshes = [];\n\n    function gatherMeshes() {\n      scene.traverse((object) => {\n        if (!object.material) return;\n        if (!object.visible) return;\n\n        const materials = Array.isArray(object.material)\n          ? object.material\n          : [object.material];\n        let isTransparent = true;\n        let isWboitCapable = true;\n\n        for (let i = 0; i < materials.length; i++) {\n          isTransparent = isTransparent && materials[i].transparent;\n          isWboitCapable =\n            isWboitCapable && isTransparent && materials[i].wboitEnabled;\n\n          testCache.set(materials[i], materials[i].depthTest);\n          writeCache.set(materials[i], materials[i].depthWrite);\n        }\n\n        if (!isWboitCapable) {\n          if (!isTransparent) {\n            opaqueMeshes.push(object);\n\n            for (let i = 0; i < materials.length; i++) {\n              materials[i].depthTest = true;\n              materials[i].depthWrite = true;\n            }\n          } else {\n            transparentMeshes.push(object);\n\n            for (let i = 0; i < materials.length; i++) {\n              materials[i].depthTest = true;\n              materials[i].depthWrite = false;\n            }\n          }\n        } else {\n          wboitMeshes.push(object);\n\n          for (let i = 0; i < materials.length; i++) {\n            blendingCache.set(materials[i], materials[i].blending);\n            blendEquationCache.set(materials[i], materials[i].blendEquation);\n            blendSrcCache.set(materials[i], materials[i].blendSrc);\n            blendDstCache.set(materials[i], materials[i].blendDst);\n          }\n        }\n\n        cache.set(object, object.visible);\n      });\n    }\n\n    function changeVisible(\n      opaqueVisible = true,\n      transparentVisible = true,\n      wboitVisible = true\n    ) {\n      opaqueMeshes.forEach((mesh) => (mesh.visible = opaqueVisible));\n      transparentMeshes.forEach((mesh) => (mesh.visible = transparentVisible));\n      wboitMeshes.forEach((mesh) => (mesh.visible = wboitVisible));\n    }\n\n    function resetVisible() {\n      for (const [key, value] of cache) {\n        key.visible = value;\n\n        if (key.material) {\n          const materials = Array.isArray(key.material)\n            ? key.material\n            : [key.material];\n\n          for (let i = 0; i < materials.length; i++) {\n            materials[i].depthWrite = testCache.get(materials[i]);\n            materials[i].depthTest = writeCache.get(materials[i]);\n          }\n        }\n      }\n    }\n\n    function prepareWboitBlending(stage) {\n      wboitMeshes.forEach((mesh) => {\n        const materials = Array.isArray(mesh.material)\n          ? mesh.material\n          : [mesh.material];\n\n        for (let i = 0; i < materials.length; i++) {\n          if (\n            materials[i].wboitEnabled !== true ||\n            materials[i].transparent !== true\n          )\n            continue;\n\n          if (materials[i].renderStage) {\n            materials[i].renderStage = stage;\n          } else if (\n            materials[i].uniforms &&\n            materials[i].uniforms[\"renderStage\"]\n          ) {\n            materials[i].uniforms[\"renderStage\"].value = stage.toFixed(1);\n          }\n\n          switch (stage) {\n            case WboitStages.Acummulation:\n              materials[i].blending = CustomBlending;\n              materials[i].blendEquation = AddEquation;\n              materials[i].blendSrc = OneFactor;\n              materials[i].blendDst = OneFactor;\n              materials[i].depthWrite = false;\n              materials[i].depthTest = true;\n\n              break;\n\n            case WboitStages.Revealage:\n              materials[i].blending = CustomBlending;\n              materials[i].blendEquation = AddEquation;\n              materials[i].blendSrc = ZeroFactor;\n              materials[i].blendDst = OneMinusSrcAlphaFactor;\n              materials[i].depthWrite = false;\n              materials[i].depthTest = true;\n\n              break;\n\n            default:\n              materials[i].blending = blendingCache.get(materials[i]);\n              materials[i].blendEquation = blendEquationCache.get(materials[i]);\n              materials[i].blendSrc = blendSrcCache.get(materials[i]);\n              materials[i].blendDst = blendDstCache.get(materials[i]);\n          }\n        }\n      });\n    }\n\n    // Save Current State\n    const oldAutoClear = renderer.autoClear;\n    const oldClearAlpha = renderer.getClearAlpha();\n    const oldRenderTarget = renderer.getRenderTarget();\n    const oldOverrideMaterial = scene.overrideMaterial;\n    renderer.autoClear = false;\n    renderer.getClearColor(this._oldClearColor);\n    scene.overrideMaterial = null;\n\n    // Gather Opaque / Transparent Meshes\n    gatherMeshes();\n\n    // Clear Write Buffer\n    if (this.clearColor) {\n      renderer.setRenderTarget(writeBuffer);\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n      renderer.clearColor();\n    }\n\n    // Render Opaque Objects\n    changeVisible(true, false, false);\n    renderer.setRenderTarget(this.baseTarget);\n    renderer.setClearColor(_clearColorZero, 0.0);\n    renderer.clear();\n    renderer.render(scene, this.camera);\n\n    // Gamma Correction\n    this.opaquePass.material.uniforms[\"uGamma\"].value =\n      renderer.outputColorSpace === SRGBColorSpace ? 1 : 0;\n    this.transparentPass.material.uniforms[\"uGamma\"].value =\n      renderer.outputColorSpace === SRGBColorSpace ? 1 : 0;\n    this.compositePass.material.uniforms[\"uGamma\"].value =\n      renderer.outputColorSpace === SRGBColorSpace ? 1 : 0;\n\n    // Copy 'Opaque Render' to write buffer so we can re-use depth buffer\n    this.opaquePass.render(renderer, writeBuffer, this.baseTarget);\n\n    // Render Transparent Objects\n    changeVisible(false, true, false);\n    renderer.setRenderTarget(this.baseTarget);\n    renderer.clearColor();\n    renderer.render(scene, this.camera);\n\n    // Copy 'Transparent Render' to write buffer so we can re-use depth buffer\n    this.transparentPass.render(renderer, writeBuffer, this.baseTarget);\n\n    // Render Wboit Objects, Accumulation Pass (copy render to write buffer so we can re-use depth buffer)\n    changeVisible(false, false, true);\n    prepareWboitBlending(WboitStages.Acummulation);\n    renderer.setRenderTarget(this.baseTarget);\n    renderer.clearColor();\n    renderer.render(scene, this.camera);\n    this.copyPass.render(renderer, this.accumulationTarget, this.baseTarget);\n\n    // Render Wboit Objects, Revealage Pass\n    prepareWboitBlending(WboitStages.Revealage);\n    renderer.setRenderTarget(this.baseTarget);\n    renderer.setClearColor(_clearColorOne, 1.0);\n    renderer.clearColor();\n    renderer.render(scene, this.camera);\n\n    // Composite Wboit Objects\n    renderer.setRenderTarget(writeBuffer);\n    this.compositePass.uniforms[\"tAccumulation\"].value =\n      this.accumulationTarget.texture;\n    this.compositePass.uniforms[\"tRevealage\"].value =\n      this.baseTarget.texture; /* now holds revealage render */\n    this.compositePass.render(renderer, writeBuffer);\n\n    // Restore Original State\n    prepareWboitBlending(WboitStages.Normal);\n    resetVisible();\n    renderer.setRenderTarget(oldRenderTarget);\n    renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    scene.overrideMaterial = oldOverrideMaterial;\n    renderer.autoClear = oldAutoClear;\n\n    // Clear Caches\n    cache.clear();\n    blendingCache.clear();\n    blendEquationCache.clear();\n    blendSrcCache.clear();\n    blendDstCache.clear();\n    testCache.clear();\n    writeCache.clear();\n  }\n}\n\nexport { WboitPass };\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Reference\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// Basic OIT Info:\n//      https://learnopengl.com/Guest-Articles/2020/OIT/Introduction\n//      https://en.wikipedia.org/wiki/Order-independent_transparency\n//\n// Weighted, Blended OIT:\n//      https://learnopengl.com/Guest-Articles/2020/OIT/Weighted-Blended\n//      https://therealmjp.github.io/posts/weighted-blended-oit/\n//\n// Multiple Render Targets:\n//      https://github.com/mrdoob/three.js/blob/master/examples/webgl2_multiple_rendertargets.html\n//\n// THREE Issue:\n//      https://github.com/mrdoob/three.js/issues/9977\n//\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Acknowledgements\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// Original Paper on WBOIT:\n//      Description:    Weighted, Blended Order-Independent Transparency\n//      Author:         Morgan McGuire and Louis Bavoil\n//      License:        CC BYND 3.0\n//      Source(s):      http://jcgt.org/published/0002/02/09/\n//                      http://casual-effects.blogspot.com/2014/03/weighted-blended-order-independent.html\n//                      http://casual-effects.blogspot.com/2015/03/implemented-weighted-blended-order.html\n//                      http://casual-effects.blogspot.com/2015/03/colored-blended-order-independent.html\n//                      http://casual-effects.com/research/McGuire2016Transparency/index.html\n//\n// Working WebGL 2 Example:\n//      Description:    WebGL 2 Example: Weighted, Blended Order-independent Transparency\n//      Author:         Tarek Sherif <@tsherif>\n//      License:        Distributed under the MIT License\n//      Source:         https://github.com/tsherif/webgl2examples/blob/master/oit.html\n//\n// Previous Three.js Progress:\n//      Description:    Depth Peel Example\n//      Author:         Dusan Bosnjak <@pailhead>\n//      Source:         https://github.com/mrdoob/three.js/pull/15490\n//                      https://raw.githack.com/pailhead/three.js/depth-peel-stencil/examples/webgl_materials_depthpeel.html\n//\n//      Description:    Weighted, Blended Example\n//      Author:         Alexander Rose <@arose>\n//      Source(s):      https://github.com/mrdoob/three.js/issues/4814\n//                      https://github.com/arose/three.js/tree/oit\n//                      https://github.com/mrdoob/three.js/compare/dev...arose:three.js:oit\n//                      https://raw.githack.com/arose/three.js/oit/examples/webgl_oit.html\n//\n/////////////////////////////////////////////////////////////////////////////////////\n/////   License\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// MIT License\n//\n// three-wboit\n//      Copyright (c) 2022 Stephens Nunnally <@stevinz>\n//\n// Some Portions\n//      Copyright (c) 2010-2022 mrdoob and three.js authors\n//      Copyright (c) 2014 Alexander Rose\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n","/**\n * Helper utilities for WboitPass\n */\n\nimport { WboitStages } from \"./materials/MeshWboitMaterial.js\";\n\nlet _materialCounter = 0;\nconst _stage = { value: 0.5 };\n\nclass WboitUtils {\n  static patch(existingMaterial) {\n    let materials = Array.isArray(existingMaterial)\n      ? existingMaterial\n      : [existingMaterial];\n\n    for (let i = 0; i < materials.length; i++) {\n      const material = materials[i];\n      if (!material.isMaterial) continue;\n      if (material.wboitEnabled) continue;\n\n      const existingOnBeforeCompile = material.onBeforeCompile;\n\n      material.onBeforeCompile = function (shader, renderer) {\n        if (material.wboitEnabled === true) return;\n        material.wboitEnabled = true;\n\n        if (typeof existingOnBeforeCompile === \"function\")\n          existingOnBeforeCompile(shader, renderer);\n\n        shader.uniforms.renderStage = _stage;\n        shader.uniforms.weight = { value: 1.0 };\n\n        shader.fragmentShader =\n          `\n\t\t\t\t\tuniform float renderStage;\n\t\t\t\t\tuniform float weight;\n\t\t\t\t` + shader.fragmentShader;\n\n        // shader.fragmentShader = shader.fragmentShader.replace('#include <tonemapping_fragment>', '');\n        // shader.fragmentShader = shader.fragmentShader.replace('#include <colorspace_fragment>', '');\n\n        shader.fragmentShader = shader.fragmentShader.replace(\n          /}$/gm,\n          `\n\n\t\t\t\t\tif ( renderStage == ${WboitStages.Acummulation.toFixed(1)} ) {\n\t\t\t\t\t\tvec4 accum = gl_FragColor.rgba;\n\n\t\t\t\t\t\t#ifndef PREMULTIPLIED_ALPHA\n\t\t\t\t\t\t\taccum.rgb *= accum.a;\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\tfloat z = gl_FragCoord.z;\n\n\t\t\t\t\t\tfloat scaleWeight = 0.7 + ( 0.3 * weight );\n\t\t\t\t\t\tfloat w = clamp( pow( ( accum.a * 8.0 + 0.001 ) * ( - z * scaleWeight + 1.0 ), 3.0 ) * 1000.0, 0.001, 300.0 );\n\n\t\t\t\t\t\tgl_FragColor = accum * w;\n\t\t\t\t\t\tgl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n\n\t\t\t\t\t} else if ( renderStage == ${WboitStages.Revealage.toFixed(1)} ) {\n\n\t\t\t\t\t \tgl_FragColor = vec4( gl_FragColor.a * gl_FragCoord.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}`\n        );\n        console.log(shader.fragmentShader);\n        Object.defineProperty(material, \"renderStage\", {\n          get: function () {\n            return _stage;\n          },\n\n          set: function (stage) {\n            _stage.value = parseFloat(stage);\n          },\n        });\n      };\n\n      const materialID = _materialCounter;\n      _materialCounter++;\n\n      material.customProgramCacheKey = function () {\n        return materialID;\n      };\n\n      material.needsUpdate = true;\n    }\n  }\n}\n\nexport { WboitUtils };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAKA;AACK,MAAC,UAAU,GAAG;AACnB;AACA,CAAC,QAAQ,EAAE;AACX;AACA,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,EAAE,QAAQ,EAAE,EAAE;AAC3C,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;AAC3B;AACA,EAAE;AACF;AACA,CAAC,YAAY,YAAY,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC;AACJ;AACA,CAAC,cAAc,YAAY,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC;AACJ;AACA;;ACzBK,MAAC,uBAAuB,GAAG;AAChC;AACA,IAAI,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,GAAG;AACzC;AACA,IAAI,QAAQ,EAAE,aAAa,CAAC,KAAK,EAAE;AACnC,QAAQ,WAAW,CAAC,MAAM;AAC1B,QAAQ,WAAW,CAAC,WAAW;AAC/B,QAAQ,WAAW,CAAC,MAAM;AAC1B,QAAQ,WAAW,CAAC,KAAK;AACzB,QAAQ,WAAW,CAAC,QAAQ;AAC5B,QAAQ,WAAW,CAAC,GAAG;AACvB,KAAK,EAAE;AACP;AACA,IAAI,YAAY,EAAE,WAAW,CAAC,cAAc;AAC5C;AACA,IAAI,cAAc,EAAE,WAAW,CAAC,cAAc;AAC9C;AACA;;AC5BA;AACA;AACA;AACA;AACA;AAQA;AACA,MAAM,WAAW,GAAG;AACpB,EAAE,MAAM,EAAE,GAAG;AACb,EAAE,YAAY,EAAE,GAAG;AACnB,EAAE,SAAS,EAAE,GAAG;AAChB,CAAC,CAAC;AACF;AACA,MAAM,gBAAgB,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA,EAAE,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;AAChC,IAAI;AACJ,MAAM,WAAW,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;AACjC,MAAM,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;AAC5B,KAAK;AACL,IAAI,WAAW,CAAC,MAAM;AACtB,IAAI,WAAW,CAAC,WAAW;AAC3B,IAAI,WAAW,CAAC,MAAM;AACtB,IAAI,WAAW,CAAC,KAAK;AACrB,IAAI,WAAW,CAAC,QAAQ;AACxB,IAAI,WAAW,CAAC,GAAG;AACnB,GAAG,CAAC;AACJ;AACA,EAAE,YAAY,aAAa,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC;AACJ;AACA,EAAE,cAAc,aAAa,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,cAAc,CAAC;AAC/C,EAA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"}